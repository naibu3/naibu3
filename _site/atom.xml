<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cblog.h</title>
    <description>A Jekyll Blog Theme For Hackers</description>
    <link>http://localhost:8000</link>
    <atom:link href="http://localhost:8000/feed.xml" rel="self" type="application/rss+xml" />
    <author>
      <name>n4ibu3</name>
      <email>someone@somewebsite.somedomain</email>
      <uri>https://ashishchaudhary.in/hacker-blog</uri>
    </author>
    
      <item>
        <title>Descifrando afín</title>
        <description>&lt;h1 id=&quot;introducción&quot;&gt;Introducción&lt;/h1&gt;

&lt;p&gt;En este post trataremos la resolución de un ejercicio para un trabajo de la asignatura de Matemática Discreta del grado de Ingeniería Informática. El enunciado pide lo siguiente:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Suponiendo que tenemos un alfabeto como el indicado en la pregunta 1 (indicado a continuación), utilizar unsistema de cifrado César adecuado para descifrar el siguiente texto: FDEXDXZTFDTPLCZDPXKWX&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Así, tenemos como datos el alfabeto &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z]&lt;/code&gt; y la expresión codificada &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FDEXDXZTFDTPLCZDPXKWX&lt;/code&gt;. Además, el profesor nos dio la pista de que se trata de &lt;a href=&quot;https://naibu3.github.io/Cifrado-Cesar-y-afin&quot;&gt;cifrado afín&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Para resolverlo utilizaremos python, en su versión 3.8, ya que permite un manejo cómodo de listas y posee una sintaxis sencilla. La metodología será un ataque de fuerza bruta, con la que intentaremos &lt;em&gt;romper&lt;/em&gt; la contraseña probando todas las combinaciones posibles. Ya definido el problema, vamos con el código.&lt;/p&gt;

&lt;h1 id=&quot;código&quot;&gt;Código&lt;/h1&gt;

&lt;p&gt;Empezaremos con la cabecera clásica y el tipo de encoding, además importaremos la función del máximo común divisor de la librería matemática para usarla más adelante.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/python3
#_*_utf-8_*_
&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gcd&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A continuación definiremos tres variables con los datos del problema para utilizarlos más cómodamente.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;n_elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;abcedario&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'E'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'F'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'G'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'H'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'I'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'J'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'K'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'L'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'M'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	 &lt;span class=&quot;s&quot;&gt;'N'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'O'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'P'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Q'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'R'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'S'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'T'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'U'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'V'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'W'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'X'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Y'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Z'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;codigo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;FDEXDXZTFDTPLCZDPXKWX&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A continuación, implementaremos la &lt;strong&gt;función de descifrado&lt;/strong&gt;. En el post anterior explicamos como se cifra y descifra, así como las fórmulas y procedimientos. En concreto, la función que descifra sería 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;D(x) = a⁻¹*(x-b) mod m&lt;/code&gt;, donde x es el índice de cada letra en el alfabeto, a y b, las constantes de decimación y desplazamiento; y m el número de elementos del alfabeto.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;descifrar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;#Dclaramos una lista para guardar el resultado
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;code_descif&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;#Recorremos la cadena de codigo cifrado
&lt;/span&gt;	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;#Guardamos el indice en el alfabeto de cada elemento cifrado
&lt;/span&gt;		&lt;span class=&quot;n&quot;&gt;ind&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;#Aplicamos la formula inversa y lo añadimos a la lista 
&lt;/span&gt;		&lt;span class=&quot;n&quot;&gt;ind_orig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;code_descif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ind_orig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
	
	&lt;span class=&quot;c1&quot;&gt;#Devolvemos la lista de elementos descifrados convertida a cadena
&lt;/span&gt;	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code_descif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;En el &lt;strong&gt;bucle principal&lt;/strong&gt;, probaremos todas las posibles combinaciones de a y b para el alfabeto dado. Esto implica que solo servirán las &lt;em&gt;a&lt;/em&gt; que sean primas entre sí con el número de elementos (el máximo común divisor es 1), condición que detallo en el &lt;a href=&quot;https://naibu3.github.io/Cifrado-Cesar-y-afin&quot;&gt;post sobre cifrado cesar y afin&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

			&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n_elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

				&lt;span class=&quot;c1&quot;&gt;#Imprimo el codigo descifrado junto a la a y b correspondientes
&lt;/span&gt;				&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;descifrar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;codigo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abcedario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; -&amp;gt; a=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, b=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tras la ejecución obtendremos una lista de más de 300 elementos por pantalla, que podremos leer uno a uno para encontrar aquel que sea legible. Puede parecer tedioso pero es la forma más simple de resolverlo. Sin embargo, en caso de que se quiera mejorar el script, estoy trabajando en una implementación con un análisis de frecuencia que muestre las opciones más probables primero para facilitar este último paso.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[...]

XHCLHLBFXHFZTMBHZLYQL -&amp;gt; a=5, b=20

CMHQMQGKCMKEYRGMEQDVQ -&amp;gt; a=5, b=21

HRMVRVLPHRPJDWLRJVIAV -&amp;gt; a=5, b=22

MWRAWAQUMWUOIBQWOANFA -&amp;gt; a=5, b=23

RBWFBFVZRBZTNGVBTFSKF -&amp;gt; a=5, b=24

WGBKGKAEWGEYSLAGYKXPK -&amp;gt; a=5, b=25

BLGPLPFJBLJDXQFLDPCUP -&amp;gt; a=5, b=26

XTIHTHLZXTZRJELTRHUSH -&amp;gt; a=7, b=0

IETSESWKIEKCUPWECSFDS -&amp;gt; a=7, b=1

TPEDPDHVTPVNFAHPNDQOD -&amp;gt; a=7, b=2

EAPOAOSGEAGYQLSAYOBZO -&amp;gt; a=7, b=3

PLAZLZDRPLRJBWDLJZMKZ -&amp;gt; a=7, b=4

AWLKWKOCAWCUMHOWUKXVK -&amp;gt; a=7, b=5

LHWVHVZNLHNFXSZHFVIGV -&amp;gt; a=7, b=6

WSHGSGKYWSYQIDKSQGTRG -&amp;gt; a=7, b=7

HDSRDRVJHDJBTOVDBRECR -&amp;gt; a=7, b=8

SODCOCGUSOUMEZGOMCPNC -&amp;gt; a=7, b=9

DZONZNRFDZFXPKRZXNAYN -&amp;gt; a=7, b=10

OKZYKYCQOKQIAVCKIYLJY -&amp;gt; a=7, b=11

[...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Como ya encontré la frase cifrada pude comprobar rápidamente si el script funcionaba:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ python3 afindecoder.py | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;SUERTE

OSDESEAMOSMUCHASUERTE -&amp;gt; &lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;19, &lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;25

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;fuentes&quot;&gt;Fuentes&lt;/h1&gt;

&lt;p&gt;Este código es fruto de la investigación recogida en mi &lt;a href=&quot;https://naibu3.github.io/Cifrado-Cesar-y-afin&quot;&gt;post sobre cifrado cesar y afin&lt;/a&gt;, donde se encuntran las fuentes consultadas y una explicación detallada. Además dejaré tanto el script como la versión mejorada con análisis de frecuencias en mi &lt;a href=&quot;&quot;&gt;github&lt;/a&gt; por si alguien quisiera descargarlo.&lt;/p&gt;

&lt;p&gt;¡ TPLCZDJKZLVZDYFKAXXKXDWXYFDW !&lt;/p&gt;
</description>
        <pubDate>Wed, 04 May 2022 00:00:00 +0200</pubDate>
        <link>http://localhost:8000//Desifrando-afin-python</link>
        <link href="http://localhost:8000/Desifrando-afin-python"/>
        <guid isPermaLink="true">http://localhost:8000/Desifrando-afin-python</guid>
      </item>
    
      <item>
        <title>Cifrado César y afín</title>
        <description>&lt;h1 id=&quot;introduccion&quot;&gt;Introduccion&lt;/h1&gt;

&lt;p&gt;El &lt;em&gt;cifrado cesar&lt;/em&gt;, o &lt;em&gt;cifrado por desplazamiento&lt;/em&gt;, es una de las técnicas de cifrado más simples y por tanto más usadas. Toma su nombre del archiconocido emperador romano, que lo empleaba como medida de seguridad al comunicarse con sus generales.&lt;/p&gt;

&lt;p&gt;En cuanto al funcionamiento, se basa en cambiar el alfabeto por uno desplazado n posiciones. De esta forma, HOLA desplazado dos posiciones pasaria a ser JQNC. Este cifrado suele formar parte de cifrados más complejos como el Vigenère o el ROT13. Sin embargo, por sí solo, no ofrece gran seguridad debido a su sencillez, lo que lo hace vulnerable a ataques de fuerza bruta.&lt;/p&gt;

&lt;h2 id=&quot;aritmetica-modular&quot;&gt;Aritmetica modular&lt;/h2&gt;

&lt;p&gt;El algoritmo de este cifrado puede ser expresado matemáticamente mediante aritmética modular[^1], empleando en lugar de letras su posición en el alfabeto (A=0, B=1, C=2,…).&lt;/p&gt;

&lt;!--Referencias--&gt;
&lt;p&gt;[^1]En matemática, la aritmética modular es un sistema aritmético para clases de equivalencia de números enteros llamadas clases de congruencia. Algunas veces se le llama, sugerentemente, aritmética del reloj, ya que los números «dan la vuelta» tras alcanzar cierto valor llamado módulo.&lt;/p&gt;

&lt;h3 id=&quot;cifrado&quot;&gt;Cifrado&lt;/h3&gt;

&lt;p&gt;La expresión para el cifrado sería:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;E(x) = x + n mod m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Donde x es la posicion de la letra, n el número de posiciones y m el tamaño del alfabeto.&lt;/p&gt;

&lt;h5 id=&quot;ejemplo&quot;&gt;Ejemplo:&lt;/h5&gt;

&lt;p&gt;Como ejemplo, encriptaremos la palabra “&lt;em&gt;HOLA&lt;/em&gt;” con un desplazamiento de 4. Al cifrar el alfabeto quedaría:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;th&gt;11&lt;/th&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;th&gt;13&lt;/th&gt;
      &lt;th&gt;14&lt;/th&gt;
      &lt;th&gt;15&lt;/th&gt;
      &lt;th&gt;16&lt;/th&gt;
      &lt;th&gt;17&lt;/th&gt;
      &lt;th&gt;18&lt;/th&gt;
      &lt;th&gt;19&lt;/th&gt;
      &lt;th&gt;20&lt;/th&gt;
      &lt;th&gt;21&lt;/th&gt;
      &lt;th&gt;22&lt;/th&gt;
      &lt;th&gt;23&lt;/th&gt;
      &lt;th&gt;24&lt;/th&gt;
      &lt;th&gt;25&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;D&lt;/td&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;F&lt;/td&gt;
      &lt;td&gt;G&lt;/td&gt;
      &lt;td&gt;H&lt;/td&gt;
      &lt;td&gt;I&lt;/td&gt;
      &lt;td&gt;J&lt;/td&gt;
      &lt;td&gt;K&lt;/td&gt;
      &lt;td&gt;L&lt;/td&gt;
      &lt;td&gt;M&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
      &lt;td&gt;O&lt;/td&gt;
      &lt;td&gt;P&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
      &lt;td&gt;R&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;T&lt;/td&gt;
      &lt;td&gt;U&lt;/td&gt;
      &lt;td&gt;V&lt;/td&gt;
      &lt;td&gt;W&lt;/td&gt;
      &lt;td&gt;X&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
      &lt;td&gt;Z&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;F&lt;/td&gt;
      &lt;td&gt;G&lt;/td&gt;
      &lt;td&gt;H&lt;/td&gt;
      &lt;td&gt;I&lt;/td&gt;
      &lt;td&gt;J&lt;/td&gt;
      &lt;td&gt;K&lt;/td&gt;
      &lt;td&gt;L&lt;/td&gt;
      &lt;td&gt;M&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
      &lt;td&gt;O&lt;/td&gt;
      &lt;td&gt;P&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
      &lt;td&gt;R&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;T&lt;/td&gt;
      &lt;td&gt;U&lt;/td&gt;
      &lt;td&gt;V&lt;/td&gt;
      &lt;td&gt;W&lt;/td&gt;
      &lt;td&gt;X&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
      &lt;td&gt;Z&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;D&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;De modo que la palabra quedaría: “&lt;em&gt;LSPE&lt;/em&gt;”. O haciéndolo todo letra a letra:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;E(&quot;H&quot;) = E(7) = 7 + 4 = 11 = &quot;L&quot;
E(&quot;O&quot;) = E(14) = 14 + 4 = 18 = &quot;S&quot;
E(&quot;L&quot;) = E(11) = 11 + 4 = 15 = &quot;P&quot;
E(&quot;A&quot;) = E(0) = 0 + 4 = 4 = &quot;E&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;descifrado&quot;&gt;Descifrado&lt;/h3&gt;

&lt;p&gt;Para descifrar el código basta con realizar la operación inversa, es decir retroceder &lt;em&gt;n&lt;/em&gt; posiciones. La expresión para el descifrado sería:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;D(x) = x - n mod m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Donde x es la posicion de la letra cifrada, n el número de posiciones y m el tamaño del alfabeto.&lt;/p&gt;

&lt;h5 id=&quot;ejemplo-1&quot;&gt;Ejemplo:&lt;/h5&gt;

&lt;p&gt;Como ejemplo descifraremos “&lt;em&gt;LSPE&lt;/em&gt;”, la palabra del ejemplo anterior, a la que aplicamos un desplazamiento de 4. Para ello simplemente aplicaríamos el procedimiento a la inversa, bien mirando la equivalencia entre alfabeto cifrado y descifrado, o matemáticamente:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;D(&quot;L&quot;) = D(11) = 11 - 4 = 7 = &quot;H&quot;
D(&quot;S&quot;) = D(18) = 18 - 4 = 14 = &quot;O&quot;
D(&quot;P&quot;) = D(15) = 15 - 4 = 11 = &quot;L&quot;
D(&quot;E&quot;) = D(4) = 4 - 4 = 0 = &quot;A&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;De esta forma ya tendríamos el mensaje descifrado. Sin embargo, ya disponíamos el desplazamiento aplicado, pero, en caso de no tenerlo, aún sería posible descifrarlo por fuerza bruta, es decir, probando todas los posibles desplazamientos.&lt;/p&gt;

&lt;h1 id=&quot;cifrado-afín&quot;&gt;Cifrado afín&lt;/h1&gt;

&lt;p&gt;El cifrado cesar, pese a ser uno de los más conocidos, es una generalización del cifrado afín. Este, es un cifrado por sustitución, que cambia cada letra por otra según una función matemática. Otorga mayor seguridad al ser más complejo, pero aún es posible descifrarlo fácilmente con fuerza bruta, método que se analizará en la &lt;a href=&quot;https://naibu3.github.io/Desifrando-afin-python&quot;&gt;segunda parte del post&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;cifrado-1&quot;&gt;Cifrado&lt;/h3&gt;

&lt;p&gt;La fórmula aplicando la aritmética binaria para el cifrado sería:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;E(x) = (a * x + b) mod m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Donde x es el índice de cada letra en el alfabeto, a y b, las constantes de decimación y desplazamiento; y m el número de elementos del alfabeto.&lt;/p&gt;

&lt;p&gt;Además, deben cumplirse ciertos requisitos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;a&lt;/strong&gt; debe ser prima entre sí con el número de elementos (que el máximo común divisor sea 1).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;a&lt;/strong&gt; debe ser distinta de 0.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;b&lt;/strong&gt; debe estar entre 0 y m, ambos inclusive.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;ejemplo-2&quot;&gt;Ejemplo&lt;/h5&gt;

&lt;p&gt;Para ilustrar el método encriptemos la palabra &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;HOLA&quot;&lt;/code&gt; según el siguiente alfabeto:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Donde &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A=0&lt;/code&gt; y &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Z=25&lt;/code&gt;. Además emplearemos una &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a = 19&lt;/code&gt; y &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b = 25&lt;/code&gt; que cumplen las condiciones previamente mencionadas. Aplicando la fórmula al alfabeto, quedaría una equivalecia como esta:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;th&gt;11&lt;/th&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;th&gt;13&lt;/th&gt;
      &lt;th&gt;14&lt;/th&gt;
      &lt;th&gt;15&lt;/th&gt;
      &lt;th&gt;16&lt;/th&gt;
      &lt;th&gt;17&lt;/th&gt;
      &lt;th&gt;18&lt;/th&gt;
      &lt;th&gt;19&lt;/th&gt;
      &lt;th&gt;20&lt;/th&gt;
      &lt;th&gt;21&lt;/th&gt;
      &lt;th&gt;22&lt;/th&gt;
      &lt;th&gt;23&lt;/th&gt;
      &lt;th&gt;24&lt;/th&gt;
      &lt;th&gt;25&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;D&lt;/td&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;F&lt;/td&gt;
      &lt;td&gt;G&lt;/td&gt;
      &lt;td&gt;H&lt;/td&gt;
      &lt;td&gt;I&lt;/td&gt;
      &lt;td&gt;J&lt;/td&gt;
      &lt;td&gt;K&lt;/td&gt;
      &lt;td&gt;L&lt;/td&gt;
      &lt;td&gt;M&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
      &lt;td&gt;O&lt;/td&gt;
      &lt;td&gt;P&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
      &lt;td&gt;R&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;T&lt;/td&gt;
      &lt;td&gt;U&lt;/td&gt;
      &lt;td&gt;V&lt;/td&gt;
      &lt;td&gt;W&lt;/td&gt;
      &lt;td&gt;X&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
      &lt;td&gt;Z&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Z&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;L&lt;/td&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;X&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
      &lt;td&gt;J&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;V&lt;/td&gt;
      &lt;td&gt;O&lt;/td&gt;
      &lt;td&gt;H&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;T&lt;/td&gt;
      &lt;td&gt;M&lt;/td&gt;
      &lt;td&gt;F&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
      &lt;td&gt;R&lt;/td&gt;
      &lt;td&gt;K&lt;/td&gt;
      &lt;td&gt;D&lt;/td&gt;
      &lt;td&gt;W&lt;/td&gt;
      &lt;td&gt;P&lt;/td&gt;
      &lt;td&gt;I&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;U&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
      &lt;td&gt;G&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Y ya sólo quedaría sustituir según la tabla. O bien se puede calcular individualmente para cada una de las letras:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;E(&quot;H&quot;) = E(7) = (19 * 7 + 25) mod 26 = 2 = &quot;C&quot;
E(&quot;O&quot;) = E(14) = (19 * 14 + 25) mod 26 = 5 = &quot;F&quot;
E(&quot;L&quot;) = E(11) = (19 * 11 + 25) mod 26 = 0 = &quot;A&quot;
E(&quot;A&quot;) = E(0) = (19 * 0 + 25) mod 26 = 25 = &quot;Y&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;texto claro&lt;/th&gt;
      &lt;th&gt;H&lt;/th&gt;
      &lt;th&gt;O&lt;/th&gt;
      &lt;th&gt;L&lt;/th&gt;
      &lt;th&gt;A&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;indice del alfabeto normal&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;indice del alfabeto cifrado&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;25&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;texto cifrado&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;F&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;descifrado-1&quot;&gt;Descifrado&lt;/h3&gt;

&lt;p&gt;La fórmula aplicando la aritmética binaria para el cifrado sería:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;D(x) = (a⁻¹ * (x - b)) mod m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Donde x es el índice de cada letra en el alfabeto, a⁻¹ la inversa multiplicativa de a, b la constante de desplazamiento y m el número de elementos del alfabeto.&lt;/p&gt;

&lt;p&gt;Para descifrarlo al igual que con el &lt;em&gt;cifrado césar&lt;/em&gt; deberemos aplicar la fórmula inversa. Para aplicarla, debemos encontrar la inversa multiplicativa de &lt;em&gt;a&lt;/em&gt;, por algún método como el &lt;em&gt;algoritmo de Euclides extendido&lt;/em&gt;. Una vez hayada podremos sustituir en la expresión para cada una de las letras, siempre y cuando conozcamos también &lt;em&gt;a&lt;/em&gt; y &lt;em&gt;b&lt;/em&gt;, en caso contrario será necesario recurrir a un análisis de frecuencias o a fuerza bruta.&lt;/p&gt;

&lt;h5 id=&quot;ejemplo-3&quot;&gt;EJEMPLO&lt;/h5&gt;

&lt;p&gt;Como ejemplo, descifraremos la palabra “&lt;em&gt;CFAY&lt;/em&gt;”, que ciframos en el ejemplo anterior. Como ya conocemos &lt;em&gt;a&lt;/em&gt; y &lt;em&gt;b&lt;/em&gt;, solo será necesario aplicar la expresión antes mencionada:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;a⁻¹= 11 #Calculado previamente con python3 (pow(a, -1, m))

D(&quot;C&quot;) = D(2) = (11 * (2 - 25)) mod 26 = 7 = &quot;H&quot;
D(&quot;F&quot;) = D(5) = (11 * (5 - 25)) mod 26 = 14 = &quot;O&quot;
D(&quot;A&quot;) = D(0) = (11 * (0 - 25)) mod 26 = 11 = &quot;L&quot;
D(&quot;Y&quot;) = D(25) = (11 * (25 - 25)) mod 26 = 0 = &quot;A&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Así quedaría descifrado el mensaje. En caso de querer una explicación de cómo implementar una función para decodificar en python3, puedes echarle un ojo a mi &lt;a href=&quot;https://naibu3.github.io/Desifrando-afin-python&quot;&gt;siguiente post&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;fuentes&quot;&gt;Fuentes&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://es.wikipedia.org/wiki/Cifrado_C%C3%A9sar&quot;&gt;Wikipedia-Cifrado Cesar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://es.wikipedia.org/wiki/Cifrado_af%C3%ADn&quot;&gt;Wikipedia-Cifrado Afin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://es.wikipedia.org/wiki/Aritm%C3%A9tica_modular&quot;&gt;Wikipedia-Aritmetica Modular&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://joaquin.medina.name/web2008/documentos/informatica/documentacion/seguridad/criptografia/CifraAfin/2013_08_22_LaCifraAfin.html&quot;&gt;La güeb de Juaquín-La cifra afín&lt;/a&gt;
-&lt;a href=&quot;https://www.delftstack.com/es/howto/python/mod-inverse-python/&quot;&gt;DelfStack-Inverse-mod-python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 04 May 2022 00:00:00 +0200</pubDate>
        <link>http://localhost:8000//Cifrado-Cesar-y-afin</link>
        <link href="http://localhost:8000/Cifrado-Cesar-y-afin"/>
        <guid isPermaLink="true">http://localhost:8000/Cifrado-Cesar-y-afin</guid>
      </item>
    
      <item>
        <title>Dancing HTB Walkthrough</title>
        <description>&lt;h1 id=&quot;dancing-htb&quot;&gt;Dancing HTB&lt;/h1&gt;

&lt;p&gt;En este artículo trataré la resolución de una de las máquinas del Tier 0 de HackTheBox.&lt;/p&gt;

&lt;h2 id=&quot;fase-de-reconocimiento&quot;&gt;Fase de reconocimiento&lt;/h2&gt;

&lt;p&gt;Tras ejecutar nmap obtenemos la siguiente respuesta:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$nmap -sCV 10.129.1.12

Nmap scan report for 10.129.1.12
Host is up (0.12s latency).
Not shown: 997 closed ports
PORT    STATE SERVICE       VERSION
135/tcp open  msrpc         Microsoft Windows RPC
139/tcp open  netbios-ssn   Microsoft Windows netbios-ssn
445/tcp open  microsoft-ds?
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows

│ Host script results:
|_clock-skew: 4h04m24s
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2022-04-26T23:38:28
|_  start_date: N/A
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vemos que el puerto 445 se encuentra abierto y corre smb. Por lo que tratamos de listar los 
recursos compartidos.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$smbclient -L //10.129.1.12/

Enter WORKGROUP\ 's password: 

	Sharename       Type      Comment
	---------       ----      -------
	ADMIN$          Disk      Remote Admin
	C$              Disk      Default share
	IPC$            IPC       Remote IPC
	WorkShares      Disk      
SMB1 disabled -- no workgroup available
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vemos que el recurso &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WorkShares&lt;/code&gt; no requiere de autenticación, por lo que tratamos de acceder:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$smbclient //10.129.1.12/WorkShares

smb: \&amp;gt; ls
  .                                   D        0  Mon Mar 29 10:22:01 2021
  ..                                  D        0  Mon Mar 29 10:22:01 2021
  Amy.J                               D        0  Mon Mar 29 11:08:24 2021
  James.P                             D        0  Thu Jun  3 10:38:03 2021

		5114111 blocks of size 4096. 1752259 blocks available

smb: \&amp;gt; cd James.P\

smb: \James.P\&amp;gt; ls
  .                                   D        0  Thu Jun  3 10:38:03 2021
  ..                                  D        0  Thu Jun  3 10:38:03 2021
  flag.txt                            A       32  Mon Mar 29 11:26:57 2021

		5114111 blocks of size 4096. 1752524 blocks available

smb: \James.P\&amp;gt; get flag.txt 
getting file \James.P\flag.txt of size 32 as flag.txt (0,1 KiloBytes/sec) (average 0,2 KiloBytes/sec)

smb: \James.P\&amp;gt; quit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vemos que en el directorio &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;James.P&lt;/code&gt; hay un archivo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flag.txt&lt;/code&gt;, lo descargamos con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get&lt;/code&gt; y comprobamos que es la flag.&lt;/p&gt;

&lt;p&gt;Muchas gracias por leer el post, y seguid hack.&lt;/p&gt;
</description>
        <pubDate>Tue, 26 Apr 2022 00:00:00 +0200</pubDate>
        <link>http://localhost:8000//Dancing-HTB-walkthrough</link>
        <link href="http://localhost:8000/Dancing-HTB-walkthrough"/>
        <guid isPermaLink="true">http://localhost:8000/Dancing-HTB-walkthrough</guid>
      </item>
    
      <item>
        <title>Colores en terminal C</title>
        <description>&lt;h1 id=&quot;coloreando-la-salida-en-c&quot;&gt;Coloreando la salida en C&lt;/h1&gt;

&lt;p&gt;Para inaugurar el blog, comenzaré con un pequeño post sobre cómo añadir color a
las salidas de vuestros programas. Además, yo guardé todo en un archivo de cabecra &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.h&lt;/code&gt;,
y lo guardé en la carpeta &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/include&lt;/code&gt; para incluirlo más facilmente.&lt;/p&gt;

&lt;h2 id=&quot;cómo-funciona&quot;&gt;Cómo funciona&lt;/h2&gt;

&lt;p&gt;Para cambiar el color del texto, debemos incluir al principio una cadena especial,
que C no imprime pero si toma en cuenta. A continuación dejo el listado:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define RES_COL &quot;\x1b[0m&quot;
#define NEGRO_T &quot;\x1b[30m&quot;
#define NEGRO_F &quot;\x1b[40m&quot;
#define ROJO_T &quot;\x1b[31m&quot;
#define ROJO_F &quot;\x1b[41m&quot;
#define VERDE_T &quot;\x1b[32m&quot;
#define VERDE_F &quot;\x1b[42m&quot;
#define AMARILLO_T &quot;\x1b[33m&quot;
#define AMARILLO_F &quot;\x1b[43m&quot;
#define AZUL_T &quot;\x1b[34m&quot;
#define AZUL_F &quot;\x1b[44m&quot;
#define MAGENTA_T &quot;\x1b[35m&quot;
#define MAGENTA_F &quot;\x1b[45m&quot;
#define CYAN_T &quot;\x1b[36m&quot;
#define CYAN_F &quot;\x1b[46m&quot;
#define BLANCO_T &quot;\x1b[37m&quot;
#define BLANCO_F &quot;\x1b[47m&quot;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;Los defino como macros para facilitar el uso.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;De los dos números que se observan, definen si es el color de texto o fondo, o el color, respectivamente. Además, he definido RES_COL, la cadena que resetea el color del texto a aquel
por defecto. Esta cadena debe incluirse siempre al acabar.&lt;/p&gt;

&lt;h2 id=&quot;ejemplo-de-uso&quot;&gt;Ejemplo de uso&lt;/h2&gt;

&lt;p&gt;Para imprimir con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;printf()&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%sEste texto de mostrará azul%s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AZUL_T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RES_COL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tenéis el archivo en mi &lt;a href=&quot;https://github.com/naibu3/clibs&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 20 Apr 2022 00:00:00 +0200</pubDate>
        <link>http://localhost:8000//Colores-en-terminal-C</link>
        <link href="http://localhost:8000/Colores-en-terminal-C"/>
        <guid isPermaLink="true">http://localhost:8000/Colores-en-terminal-C</guid>
      </item>
    
  </channel>
</rss>
